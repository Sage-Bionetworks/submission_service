# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.docker_submission import DockerSubmission
from openapi_server.models.docker_submission_docker import DockerSubmissionDocker
from openapi_server.models.file_submission import FileSubmission
from openapi_server.models.submission_status import SubmissionStatus
from openapi_server.models.workflow_submission import WorkflowSubmission
from openapi_server import util

from openapi_server.models.docker_submission import DockerSubmission  # noqa: E501
from openapi_server.models.docker_submission_docker import DockerSubmissionDocker  # noqa: E501
from openapi_server.models.file_submission import FileSubmission  # noqa: E501
from openapi_server.models.submission_status import SubmissionStatus  # noqa: E501
from openapi_server.models.workflow_submission import WorkflowSubmission  # noqa: E501

class Submission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, id=None, submitter=None, queue_id=None, status=None, docker=None, file=None, workflow=None, workflow_inputs=None):  # noqa: E501
        """Submission - a model defined in OpenAPI

        :param name: The name of this Submission.  # noqa: E501
        :type name: str
        :param id: The id of this Submission.  # noqa: E501
        :type id: int
        :param submitter: The submitter of this Submission.  # noqa: E501
        :type submitter: str
        :param queue_id: The queue_id of this Submission.  # noqa: E501
        :type queue_id: str
        :param status: The status of this Submission.  # noqa: E501
        :type status: SubmissionStatus
        :param docker: The docker of this Submission.  # noqa: E501
        :type docker: DockerSubmissionDocker
        :param file: The file of this Submission.  # noqa: E501
        :type file: str
        :param workflow: The workflow of this Submission.  # noqa: E501
        :type workflow: str
        :param workflow_inputs: The workflow_inputs of this Submission.  # noqa: E501
        :type workflow_inputs: str
        """
        self.openapi_types = {
            'name': str,
            'id': int,
            'submitter': str,
            'queue_id': str,
            'status': SubmissionStatus,
            'docker': DockerSubmissionDocker,
            'file': str,
            'workflow': str,
            'workflow_inputs': str
        }

        self.attribute_map = {
            'name': 'name',
            'id': 'id',
            'submitter': 'submitter',
            'queue_id': 'queueId',
            'status': 'status',
            'docker': 'docker',
            'file': 'file',
            'workflow': 'workflow',
            'workflow_inputs': 'workflowInputs'
        }

        self._name = name
        self._id = id
        self._submitter = submitter
        self._queue_id = queue_id
        self._status = status
        self._docker = docker
        self._file = file
        self._workflow = workflow
        self._workflow_inputs = workflow_inputs

    @classmethod
    def from_dict(cls, dikt) -> 'Submission':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Submission of this Submission.  # noqa: E501
        :rtype: Submission
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Submission.

        Name of submission  # noqa: E501

        :return: The name of this Submission.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Submission.

        Name of submission  # noqa: E501

        :param name: The name of this Submission.
        :type name: str
        """

        self._name = name

    @property
    def id(self):
        """Gets the id of this Submission.

        Submission Id  # noqa: E501

        :return: The id of this Submission.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Submission.

        Submission Id  # noqa: E501

        :param id: The id of this Submission.
        :type id: int
        """

        self._id = id

    @property
    def submitter(self):
        """Gets the submitter of this Submission.

        Submitter name  # noqa: E501

        :return: The submitter of this Submission.
        :rtype: str
        """
        return self._submitter

    @submitter.setter
    def submitter(self, submitter):
        """Sets the submitter of this Submission.

        Submitter name  # noqa: E501

        :param submitter: The submitter of this Submission.
        :type submitter: str
        """

        self._submitter = submitter

    @property
    def queue_id(self):
        """Gets the queue_id of this Submission.

        Queue Id  # noqa: E501

        :return: The queue_id of this Submission.
        :rtype: str
        """
        return self._queue_id

    @queue_id.setter
    def queue_id(self, queue_id):
        """Sets the queue_id of this Submission.

        Queue Id  # noqa: E501

        :param queue_id: The queue_id of this Submission.
        :type queue_id: str
        """

        self._queue_id = queue_id

    @property
    def status(self):
        """Gets the status of this Submission.


        :return: The status of this Submission.
        :rtype: SubmissionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Submission.


        :param status: The status of this Submission.
        :type status: SubmissionStatus
        """

        self._status = status

    @property
    def docker(self):
        """Gets the docker of this Submission.


        :return: The docker of this Submission.
        :rtype: DockerSubmissionDocker
        """
        return self._docker

    @docker.setter
    def docker(self, docker):
        """Sets the docker of this Submission.


        :param docker: The docker of this Submission.
        :type docker: DockerSubmissionDocker
        """

        self._docker = docker

    @property
    def file(self):
        """Gets the file of this Submission.

        File to submit to challenge  # noqa: E501

        :return: The file of this Submission.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this Submission.

        File to submit to challenge  # noqa: E501

        :param file: The file of this Submission.
        :type file: str
        """

        self._file = file

    @property
    def workflow(self):
        """Gets the workflow of this Submission.

        Workflow to run  # noqa: E501

        :return: The workflow of this Submission.
        :rtype: str
        """
        return self._workflow

    @workflow.setter
    def workflow(self, workflow):
        """Sets the workflow of this Submission.

        Workflow to run  # noqa: E501

        :param workflow: The workflow of this Submission.
        :type workflow: str
        """

        self._workflow = workflow

    @property
    def workflow_inputs(self):
        """Gets the workflow_inputs of this Submission.

        Worklfow inputs  # noqa: E501

        :return: The workflow_inputs of this Submission.
        :rtype: str
        """
        return self._workflow_inputs

    @workflow_inputs.setter
    def workflow_inputs(self, workflow_inputs):
        """Sets the workflow_inputs of this Submission.

        Worklfow inputs  # noqa: E501

        :param workflow_inputs: The workflow_inputs of this Submission.
        :type workflow_inputs: str
        """

        self._workflow_inputs = workflow_inputs
