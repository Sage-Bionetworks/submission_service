# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.compute_env import ComputeEnv
from openapi_server import util

from openapi_server.models.compute_env import ComputeEnv  # noqa: E501

class ListComputeEnvResponseAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compute_envs=None):  # noqa: E501
        """ListComputeEnvResponseAllOf - a model defined in OpenAPI

        :param compute_envs: The compute_envs of this ListComputeEnvResponseAllOf.  # noqa: E501
        :type compute_envs: List[ComputeEnv]
        """
        self.openapi_types = {
            'compute_envs': List[ComputeEnv]
        }

        self.attribute_map = {
            'compute_envs': 'computeEnvs'
        }

        self._compute_envs = compute_envs

    @classmethod
    def from_dict(cls, dikt) -> 'ListComputeEnvResponseAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListComputeEnvResponse_allOf of this ListComputeEnvResponseAllOf.  # noqa: E501
        :rtype: ListComputeEnvResponseAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compute_envs(self):
        """Gets the compute_envs of this ListComputeEnvResponseAllOf.

        An array of queues  # noqa: E501

        :return: The compute_envs of this ListComputeEnvResponseAllOf.
        :rtype: List[ComputeEnv]
        """
        return self._compute_envs

    @compute_envs.setter
    def compute_envs(self, compute_envs):
        """Sets the compute_envs of this ListComputeEnvResponseAllOf.

        An array of queues  # noqa: E501

        :param compute_envs: The compute_envs of this ListComputeEnvResponseAllOf.
        :type compute_envs: List[ComputeEnv]
        """

        self._compute_envs = compute_envs
