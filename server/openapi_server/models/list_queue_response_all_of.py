# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.queue import Queue
from openapi_server.openapi import util


class ListQueueResponseAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, queues=None):  # noqa: E501
        """ListQueueResponseAllOf - a model defined in OpenAPI

        :param queues: The queues of this ListQueueResponseAllOf.  # noqa: E501
        :type queues: List[Queue]
        """
        self.openapi_types = {
            'queues': List[Queue]
        }

        self.attribute_map = {
            'queues': 'queues'
        }

        self._queues = queues

    @classmethod
    def from_dict(cls, dikt) -> 'ListQueueResponseAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListQueueResponse_allOf of this ListQueueResponseAllOf.  # noqa: E501
        :rtype: ListQueueResponseAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def queues(self):
        """Gets the queues of this ListQueueResponseAllOf.

        An array of queues  # noqa: E501

        :return: The queues of this ListQueueResponseAllOf.
        :rtype: List[Queue]
        """
        return self._queues

    @queues.setter
    def queues(self, queues):
        """Sets the queues of this ListQueueResponseAllOf.

        An array of queues  # noqa: E501

        :param queues: The queues of this ListQueueResponseAllOf.
        :type queues: List[Queue]
        """

        self._queues = queues
